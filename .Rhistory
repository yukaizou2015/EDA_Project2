install.packages("sqldf")
?library
library(sqldf)
library(sqldf, lib.loc = "\\R01SFCHSM03.r01.med.va.gov\homedir$\vhasfczouy\My Documents\Coursera")
library(sqldf, lib.loc = "//R01SFCHSM03.r01.med.va.gov/homedir$/vhasfczouy/My Documents/Coursera")
library(sqldf, lib.loc = "//R01SFCHSM03.r01.med.va.gov/homedir$/vhasfczouy/My Documents/Coursera/library/")
install.packages("sqldf")
library(sqldf, lib.loc = "//R01SFCHSM03.r01.med.va.gov/homedir$/vhasfczouy/My Documents/Coursera/library/")
library(proto, lib.loc = "//R01SFCHSM03.r01.med.va.gov/homedir$/vhasfczouy/My Documents/Coursera/library/")
library(sqldf, lib.loc = "//R01SFCHSM03.r01.med.va.gov/homedir$/vhasfczouy/My Documents/Coursera/library/")
set.seed(42)
df1 <- data.frame(id = 1:10, class = rep(c("case", "ctrl"),5))
df1
df2 <- data.frame(id = 1:10, cov = round(runit(10)*10,1))
df2 <- data.frame(id = 1:10, cov = round(runif(10)*10,1))
df2
sqldf("select * from df1 join df2 on df1.id = df2.id")
sqldf("select * from df1 join df2 on df1.id = df2.id where class = 'case")
sqldf("select * from df1 join df2 on df1.id = df2.id where class = 'case'")
sqldf("select df1.id, df2.cov as covariate from df1 join df2 on df1.id=df2.id where class='case' and cov>3 order by cov")
data(titanic3, package = "PASWR")
library(datasets)
head(mtcars)
mMPG <- mean(mtcars$mpg)
mMPG
n <- length(mtcars$mpg)
n
std <- sd(mtcars$mpg)
mMPG - qt(0.05, df = n - 1)*std/sqrt(n)
mMPG - qt(0.95, df = n - 1)*std/sqrt(n)
mMPG - qt(0.975, df = n - 1)*std/sqrt(n)
qt(0.05)
pnorm(0.05)
qnorm(0.05)
std
std
mMPG - qnorm(0.05)*std
mMPG - qnorm(0.05)*std/sqrt(n)
g1 <- subset(mtcars, cyl = 4, select = mpg)
head(g1)
g1 <- subset(mtcars, cyl = 4, select = mpg)$mpg
str(g1)
g1 <- subset(mtcars, cyl = 6, select = mpg)$mpg
g1 <- subset(mtcars, cyl = 4, select = mpg)$mpg
g2 <- subset(mtcars, cyl = 6, select = mpg)$mpg
t.test(g1,g2, var.equal = FALSE)
t.test(g1 - g2, var.equal = FALSE)
g1
g2
g2 <- subset(mtcars, cyl == 6, select = mpg)$mpg
g2
g1
?subset
subset(mtcars, cyl = 6)
subset(mtcars, cyl ==4)
subset(mtcars, cyl == 6)
g1 <- subset(mtcars, cyl == 6, select = mpg)
g1
g1 <- subset(mtcars, cyl == 4, select = mpg)
g1
g2 <- subset(mtcars, cyl == 6, select = mpg)
t.test(g1,g2, var.equal = FALSE)
3 + c(-1,1)*qt(0.975, df = 99)*1.1/sqrt(100)
?t.test
?pbinom
pbinom(0.5, size = 300, lower.tail = FALSE)
pbinom(55, size = 100, prob = 0.5, lower.tail = FALSE)
pbinom(55, size = 100, prob = 0.5)
pbinom(54, size = 55, prob = 0.5, lower.tail = FALSE)
pbinom(54, size = 100, prob = 0.5, lower.tail = FALSE)
qbinom(0.05)
qbinom(0.05, size = 100)
qbinom(0.05, size = 100, prob = 0.5)
?ppois
ppois(15800, lambda = 520*30, lower.tail = FALSE)
g1 <- rnorm(100, mean = 10, sd = 4)
g2 <- rnorm(100, mean = 11, sd = 4)
t.test(g1 - g2, paired = FALSE)
g1 <- rnorm(100, mean = 10, sd = 4/sqrt(100))
g2 <- rnorm(100, mean = 11, sd = 4/sqrt(100))
t.test(g1 - g2, paired = FALSE)
?power.t.test
power.t.test(n = 100, delta = 1, sd = 4)$power
power.t.test(power = 0.8, delta = 0.01, sd = 0.04)$n
setwd("C:/Users/vhasfczouy/Desktop/Coursera/exdata_data_NEI_data")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
library(xlsx, lib.loc = "//R01SFCHSM03.r01.med.va.gov/homedir$/vhasfczouy/My Documents/Coursera/library/")
library(proto, lib.loc = "//R01SFCHSM03.r01.med.va.gov/homedir$/vhasfczouy/My Documents/Coursera/library/")
library(sqldf, lib.loc = "//R01SFCHSM03.r01.med.va.gov/homedir$/vhasfczouy/My Documents/Coursera/library/")
library(ggplot2, lib.loc = "//R01SFCHSM03.r01.med.va.gov/homedir$/vhasfczouy/My Documents/Coursera/library/")
NEI_Balt <- NEI[NEI$fips == "24510",] # Subset Baltimore out
SCC_MC <- SCC[SCC$SCC.Level.Three == "Motorcycles (MC)", ]
join_string2 <- "select NEI_Balt.SCC, NEI_Balt.Emissions, NEI_Balt.year, SCC_MC.SCC,
SCC_MC.[EI.Sector], SCC_MC.[SCC.Level.Three] from NEI_Balt inner join SCC_MC on
NEI_Balt.SCC = SCC_MC.SCC"
Query5 <- sqldf(join_string2, stringsAsFactors = FALSE)
g <- ggplot(data = Query5, aes(x = year, y = Emissions))
g <- g + geom_bar(stat = "identity")
g
g <- ggplot(data = Query5, aes(x = year, y = Emissions))
g <- g + geom_boxplot()
g
g <- g + geom_line()
g
g <- ggplot(data = Query5, aes(x = year, y = Emissions))
g <- g + geom_line()
g
g <- ggplot(data = Query5, aes(x = year, y = Emissions))
g <- g + geom_bar(stat = "identity")
g
g <- ggplot(data = Query5, aes(x = year, y = Emissions))
g <- g + geom_bar(stat = "identity", fill = "red", colour = black)
g
g <- ggplot(data = Query5, aes(x = year, y = Emissions))
g <- g + geom_bar(stat = "identity", fill = "red", colour = "black")
g
g <- ggplot(data = Query5, aes(x = year, y = Emissions))
g <- g + geom_bar(stat = "identity", fill="#FF9999", colour="black")
g
g <- g + geom_bar(stat = "identity", fill="#FF9999")
g
g <- ggplot(data = Query5, aes(x = year, y = Emissions))
g <- g + geom_bar(stat = "identity", fill="#FF9999")
g
g <- ggplot(data = Query5, aes(x = year, y = Emissions))
g <- g + geom_bar(stat = "identity", colour = "black", fill="#FF9999")
g
g <- ggplot(data = Query5, aes(x = year, y = Emissions))
g <- g + geom_bar(stat = "identity", fill="#FF9999")
g
dev.copy(png, file = "Question5.png")
dev.off()
NEI_BL <- NEI[NEI$fips == "24510" | NEI$fips == "06037",]
join_string3 <- "select NEI_BL.SCC, NEI_BL.Emissions, NEI_BL.year, SCC_MC.SCC,
SCC_MC.[EI.Sector], SCC_MC.[SCC.Level.Three] from NEI_BL inner join SCC_MC on
NEI_BL.SCC = SCC_MC.SCC"
Query6 <- sqldf(join_string3, stringsAsFactors = FALSE)
head(Query6)
head(NEI_BL)
join_string3 <- "select NEI_BL.SCC, NEI_BL.fips, NEI_BL.Emissions, NEI_BL.year, SCC_MC.SCC,
SCC_MC.[EI.Sector], SCC_MC.[SCC.Level.Three] from NEI_BL inner join SCC_MC on
NEI_BL.SCC = SCC_MC.SCC"
Query6 <- sqldf(join_string3, stringsAsFactors = FALSE)
head(Query6)
tail(Query6)
g <- ggplot(data = Query6, aes(x = year, y = Emissions))
g <- g + geom_bar(aes(fill = fips), stat = "identity", fill="#FF9999")
g
g <- g + geom_bar(aes(fill = fips), stat = "identity", fill="#FF9999", position = position_dodge())
g <- ggplot(data = Query6, aes(x = year, y = Emissions))
g <- g + geom_bar(aes(fill = fips), stat = "identity", fill="#FF9999", position = position_dodge())
g
g <- ggplot(data = Query6, aes(x = year, y = Emissions))
g <- g + geom_bar(aes(fill = fips), stat = "identity", fill="#FF9999")
g
g <- ggplot(data = Query6, aes(x = year, y = Emissions))
g <- g + geom_bar(aes(fill = fips), stat = "identity")
g
g <- ggplot(data = Query6, aes(x = year, y = Emissions))
g <- g + geom_bar(aes(fill = fips), stat = "identity")
g
g <- ggplot(data = Query5, aes(x = year, y = Emissions))
g <- g + geom_bar(stat = "identity")
g
g <- ggplot(data = Query6, aes(x = year, y = Emissions))
g <- g + geom_bar(aes(fill = fips), stat = "identity")
g
g <- ggplot(data = Query6, aes(x = year, y = Emissions))
g <- g + geom_bar(aes(fill = fips), stat = "identity", position = position_dodge())
g
g <- ggplot(data = Query6, aes(x = year, y = Emissions))
g <- g + geom_bar(aes(fill = fips), stat = "identity", position = position_dodge())
g <- g + scale_fill_discrete(name="Location", labels = c("Baltimore City", "Los Angeles County"))
g
dev.copy(png, file = "Question6.png")
dev.off()
te <- with(NEI, tapply(Emissions, year, sum)) # Total emissions per year
barplot(te)
dev.copy(png, file = "plot1.png")
dev.off()
barplot(te, main = "Title")
barplot(te, main = "Total PM2.5 Emission from All Sources")
barplot(te, main = "Total PM2.5 Emission from All Sources", xlab = "Year")
barplot(te, main = "Total PM2.5 Emission from All Sources", xlab = "Year", ylab = "Total Emission")
barplot(te, main = "Total PM2.5 Emissions from All Sources", xlab = "Year", ylab = "Total Emissions")
dev.copy(png, file = "plot1.png")
dev.off()
axis(1)
barplot(te, main = "Total PM2.5 Emissions from All Sources", xlab = "Year", ylab = "Total Emissions")
axis(1)
barplot(te, main = "Total PM2.5 Emissions from All Sources", col = "dark blue" xlab = "Year", ylab = "Total Emissions")
axis(1)
barplot(te, main = "Total PM2.5 Emissions from All Sources", col = "darkblue" xlab = "Year", ylab = "Total Emissions")
axis(1)
barplot(te, main = "Total PM2.5 Emissions from All Sources", col = "darkblue", xlab = "Year", ylab = "Total Emissions")
axis(1)
barplot(te, main = "Total PM2.5 Emissions from All Sources", col = "darkblue", xlab = "Year", ylab = "Total Emissions")
airquality
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City",
type = "n"))
barplot()
barplot.default()
barplot(te, type = "n")
plot(te, type = "n")
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City",
type = "n"))
with(subset(airquality, Month == 5), points(Wind, Ozone, col = "blue"))
te <- with(NEI, tapply(Emissions, year, sum)) # Total emissions per year
barplot(te, main = "Total PM2.5 Emissions from All Sources", col = "darkblue", xlab = "Year", ylab = "Total Emissions")
barplot(te, main = "Total PM2.5 Emissions from All Sources",
col = "darkblue", xlab = "Year", ylab = "Total Emissions")
barplot(te, main = "Total PM2.5 Emissions from All Sources", yaxt = "n",
col = "darkblue", xlab = "Year", ylab = "Total Emissions")
axis(2, at = seq(0,6, by = 1), las = 1)
barplot(te, main = "Total PM2.5 Emissions from All Sources", yaxt = "n",
col = "darkblue", xlab = "Year", ylab = "Total Emissions")
axis(2)
?axis
barplot(te, main = "Total PM2.5 Emissions from All Sources", yaxt = "n",
col = "darkblue", xlab = "Year", ylab = "Total Emissions")
axis(2, labels = FALSE)
axis(2, labels = rep("0", times = 8), las = 1)
axis(2, at = rep("0", times = 8), las = 1)
axis(2, labels = FALSE, at = rep("0", times = 8), las = 1)
barplot(te, main = "Total PM2.5 Emissions from All Sources", yaxt = "n",
col = "darkblue", xlab = "Year", ylab = "Total Emissions")
axis(2)
axis(2, labels = c("a", "a", "a", "a", "a", "a", "a", "a"))
axis(2, at = c("a", "a", "a", "a", "a", "a", "a", "a"))
axis(2, at = 1:8, labels = c("a", "a", "a", "a", "a", "a", "a", "a"))
barplot(te, main = "Total PM2.5 Emissions from All Sources", yaxt = "n",
col = "darkblue", xlab = "Year", ylab = "Total Emissions")
axis(2, at = 1:8, labels = c("a", "a", "a", "a", "a", "a", "a", "a"))
8e6
e6
seq(0, 8e6, by = 1e6)
barplot(te, main = "Total PM2.5 Emissions from All Sources", yaxt = "n",
col = "darkblue", xlab = "Year", ylab = "Total Emissions")
axis(2, at = seq(0, 8e6, by = 1e6), labels = c("a", "a", "a", "a", "a", "a", "a", "a"))
rep("a", times = 8)
axis(2, at = seq(0, 8e6, by = 1e6), labels = rep("a", times = 9))
barplot(te, main = "Total PM2.5 Emissions from All Sources", yaxt = "n",
col = "darkblue", xlab = "Year", ylab = "Total Emissions")
axis(2)
barplot(te, main = "Total PM2.5 Emissions from All Sources", yaxt = "n",
col = "darkblue", xlab = "Year", ylab = "Total Emissions")
axis(2, at = seq(0, 7e6, by = 1e6), labels = rep("a", times = 8))
barplot(te, main = "Total PM2.5 Emissions from All Sources", yaxt = "n",
col = "darkblue", xlab = "Year", ylab = "Total Emissions")
axis(2)
format(y, scientific = FALSE)
x <- 10 ^ (1:10)
format(x, scientific = FALSE)
?format
barplot(te, main = "Total PM2.5 Emissions from All Sources", yaxt = "n",
col = "darkblue", xlab = "Year", ylab = "Total Emissions (in million)")
axis(2, at = seq(0, 7e6, by = 1e6), labels = seq(0, 7, step = 1))
barplot(te, main = "Total PM2.5 Emissions from All Sources", yaxt = "n",
col = "darkblue", xlab = "Year", ylab = "Total Emissions (in million)", font.lab = 2)
axis(2, at = seq(0, 7e6, by = 1e6), labels = seq(0, 7, step = 1))
dev.copy(png, file = "plot1.png")
dev.off()
NEI_Balt <- NEI[NEI$fips == "24510",] # Subset Baltimore out
te2 <- with(NEI_Balt, tapply(Emissions, year, sum)) # Total emissions per year in Baltimore
barplot(te2)
dev.copy(png, file = "plot2.png")
dev.off()
barplot(te2, col = "darkblue")
barplot(te2, col = "darkblue", main = "Total PM2.5 Emissions in Baltimore City")
barplot(te2, col = "darkblue", main = "Total PM2.5 Emissions in Baltimore City", xlab = "Year", ylab = "Total Emissions", font.lab = 2)
barplot(te2, col = "darkgreen", main = "Total PM2.5 Emissions in Baltimore City", xlab = "Year", ylab = "Total Emissions", font.lab = 2)
NEI_Balt <- NEI[NEI$fips == "24510",] # Subset Baltimore out
te2 <- with(NEI_Balt, tapply(Emissions, year, sum)) # Total emissions per year in Baltimore
barplot(te2, col = "darkgreen", main = "Total PM2.5 Emissions in Baltimore City", xlab = "Year", ylab = "Total Emissions", font.lab = 2)
dev.copy(png, file = "plot2.png")
dev.off()
dev.copy(png, file = "plot2.png")
dev.off()
qplot(x = year, y = Emissions, geom = "bar", stat = "identity", data = NEI_Balt, facets = . ~ type, fill = type)
qplot(x = year, y = Emissions, geom = "bar", stat = "identity", data = NEI_Balt, facets = . ~ type, fill = type, main = "Title")
qplot(x = year, y = Emissions, geom = "bar", stat = "identity", data = NEI_Balt, facets = . ~ type, fill = type,
main = "Total PM2.5 Emissions in Baltimore City by different Types of Sources")
dev.copy(png, file = "plot3.png")
dev.off()
par(mar = c(35,70,0,0))
qplot(x = year, y = Emissions, geom = "bar", stat = "identity", data = NEI_Balt, facets = . ~ type, fill = type,
main = "Total PM2.5 Emissions in Baltimore City by different Types of Sources")
dev.copy(png, file = "plot3.png")
dev.off()
?qplot
windows.options(width=10, height=10)
qplot(x = year, y = Emissions, geom = "bar", stat = "identity", data = NEI_Balt, facets = . ~ type, fill = type,
main = "Total PM2.5 Emissions in Baltimore City by different Types of Sources")
dev.copy(png, file = "plot3.png")
windows.options(width=20, height=10)
qplot(x = year, y = Emissions, geom = "bar", stat = "identity", data = NEI_Balt, facets = . ~ type, fill = type,
main = "Total PM2.5 Emissions in Baltimore City by different Types of Sources")
dev.copy(png, file = "plot3.png")
dev.off()
qplot(x = year, y = Emissions, geom = "bar", stat = "identity", data = NEI_Balt, facets = . ~ type, fill = type,
main = "Total PM2.5 Emissions in Baltimore City by different Types of Sources")
dev.copy(png, file = "plot3.png")
dev.off()
